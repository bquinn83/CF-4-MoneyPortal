@using MoneyPortal.Models
@using MoneyPortal.ViewModels
@model BankAccount

@{
    ViewBag.Title = $"{ Model.Name } - { Model.Type.Name }";
}

<!--SHORTCUT BUTTONS-->
<div class="row shortcut-bar">
    @if (User.IsInRole("Owner") || User.IsInRole("Member"))
    {
        if (Model.HouseholdId == null)
        {
            <div class="col-auto">
                <div class="shortcut btn" id="shc-join-bank-account"><strong>Add to Household</strong> <i class="fas fa-home"></i></div>
            </div>
        }
        else
        {
            <div class="col-auto">
                <div class="shortcut btn" id="shc-join-bank-account"><strong>Add to Household</strong> <i class="fas fa-home"></i></div>
            </div>
        }
    }

    <div class="col-auto ml-auto">
        <div class="shortcut btn" id="shc-leave-household" data-toggle="modal" data-target="#modal-edit-bank-account"><strong>Edit Account</strong> <i class="fas fa-edit"></i></div>
    </div>
    <div class="col-auto">
        <div class="shortcut btn leave-household" id="shc-delete-bank-account"><strong>Delete Account</strong> <i class="fas fa-trash-alt"></i></div>
    </div>
</div>

<!--ACCOUNT DETAILS-->
<div id="account_statistics">
    @Html.Partial("_AccountStatistics", new AccountStatistics(Model))
</div>

<!--ADD TRANSACTION-->
<div class="block">
    <div class="title row no-gutters mb-0">
        <strong>Add Transaction</strong>
        <div class="col-auto ml-auto"><i class="fas fa-lg fa-chevron-up btn btn-block-minimize" id="collapse-bank-account"></i></div>
    </div>
    <div class="block-body collapsable">
        @using (Html.BeginForm("AddTransaction", "Transactions", FormMethod.Post, new { id = "form-add-transaction" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("accountId", Model.Id)
            <div class="row no-gutters">
                <div class="col-md-2">
                    @Html.Label("Amount", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12 input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text form-control">$</span>
                        </div>
                        <input type="text" class="form-control" name="amount" required />
                        <div class="input-group-append">
                            <span class="input-group-text form-control">.00</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.Label("Transaction Type", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownList("TransactionTypes", null, new { @class = "form-control", required = "" })
                        @*<input type="text" class="form-control" name="Transa" required />*@
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.Label("Memo", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        <input type="text" class="form-control" name="memo" required />
                    </div>
                </div>
                <div class="col-auto ml-auto align-self-end">
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            </div>
        }
    </div>
</div>
<!--ACCOUNT TRANSACTIONS-->
<div id="account_transactions">
    @Html.Partial("_Transactions", Model)
</div>

<!--EDIT MODAL-->
<div id="modal-edit-bank-account" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Bank Account</h4>
                <div data-dismiss="modal"><i class="fas fa-lg fa-times btn btn-block-close"></i></div>
                <button type="button" class="close" data-dismiss="modal"><i class="fas fa-times"></i></button>
            </div>
            @using (Html.BeginForm("Edit", "BankAccounts"))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group row">
                        @Html.Label("Account Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <input type="text" class="form-control" name="bankAccountName" value="@Model.Name" required />
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("BankAccountTypes", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.Label("Low Balance Alert", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9 input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text form-control">$</span>
                            </div>
                            <input type="text" class="form-control" name="lowBalanceLevel" value="@Model.LowBalanceLevel" required />
                            <div class="input-group-append">
                                <span class="input-group-text form-control">.00</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" id="btn-add-bank-account">
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $('#shc-delete-bank-account').on("click", () => {
            Swal.fire({
                title: 'Are you sure?',
                text: "This will permanently delete your account and all transactions!",
                icon: 'warning',
                input: 'text',
                inputPlaceholder: 'Enter DELETE if you wish to proceed.',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete',
                backdrop: true
            }).then((result) => {
                if (result.value == 'DELETE') {
                    window.location.href = '@Url.Action("Delete", "BankAccounts", new { accountId = Model.Id })';
                } else if (result.dismiss != Swal.DismissReason.cancel || result.dismiss != Swal.DismissReason.backdrop) {
                    Swal.fire({
                        title: 'Error!',
                        text: 'DELETE not confirmed!',
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    })
                }
            })
        })
        //not complete
        $('#shc-add-to-household').on("click", () => {
            Swal.fire({
                title: 'Add to Household?',
                text: "This account will be added to your household!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Add!'
            }).then((result) => {
                if (result.value) {
                    //add to household
                }
            })
        })
        $('#shc-remove-from-household').on("click", () => {
            Swal.fire({
                title: 'Remove from Household?',
                text: "This account will be removed from your household!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Remove!'
            }).then((result) => {
                if (result.value) {
                    //add to household
                }
            })
        })

        //ADD TRANSACTION AJAX
        $('#form-add-transaction').on("submit", function (e) {
            e.preventDefault();
            var actionUrl = $(this).attr("action");
            $.post(actionUrl, $(this).serialize(), function (result) {
                if (result) {
                    $('#form-add-transaction')[0].reset()
                    $('#account_statistics').load('@Url.Action("AccountStatistics", "BankAccounts", new { id = Model.Id })')
                    $('#account_transactions').load('@Url.Action("AccountTransactions", "BankAccounts", new { id = Model.Id })')
                    //refresh DATATABLES
                    toastr["success"]("Your transaction has been added!", "New Transaction!")
                } else if (result == false){
                    toastr["error"]("There was an error adding your transaction.", "Error!")
                }
            }).fail(function () {
                toastr["error"]("There was an error submitting your request.", "Submit Error!")
            })
        })

        //jQUERY DATA TABLES
        $('.table').DataTable({
            "order": [2, 'desc'],
            "columnDefs": [ { "orderable": false, "targets": 3 } ]
        });
    </script>
}